version: '3.5'

services:
  api1: &app
    image: api-rinha-spring
    hostname: api1
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - DATABASE_URL=jdbc:postgresql://db:5432/postgres?currentSchema=rinha
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '0.7GB'
    networks:
      - network-rinha

  api2:
    <<: *app
    hostname: api2
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081
      - DATABASE_URL=jdbc:postgresql://db:5432/postgres?currentSchema=rinha

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    networks:
      - network-rinha
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.2GB'

  db:
    image: postgres:16-alpine
    container_name: rinha-backend-db
    command: -c 'max_connections=200'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1.4GB'
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
#    network_mode: bridge
    networks:
      - network-rinha

networks:
  network-rinha: